#!/usr/bin/env bash

function root_bootstrap {
  set -exfu

  mkdir -p /data/cache
  if [[ -d "/tmp/cache" ]]; then
    (set +f; mv /tmp/cache/* /data/cache/)
  fi

  dpkg-divert --local --rename --add /sbin/initctl
  ln -sf /bin/true /sbin/initctl

  apt-get update && apt-get install -y openssh-server curl lsb-release sudo make locales python build-essential aptitude rsync jq netcat software-properties-common net-tools dnsmasq unzip perl ruby language-pack-en vim man screen runit
  add-apt-repository -y ppa:git-core/ppa && apt-get update && apt-get install -y git
  apt-get update && apt-get upgrade -y

  locale-gen en_US.UTF-8
  dpkg-reconfigure --frontend=noninteractive locales
  update-locale LANG=en_US.UTF-8

  curl -s -L -o /tini https://github.com/krallin/tini/releases/download/v0.18.0/tini-static-amd64
  chmod 755 /tini

  if groupadd -g 1000 ubuntu; then
    useradd -u 1000 -g ubuntu -d /home/ubuntu -m -s /bin/bash -p '*' ubuntu
    echo "ubuntu ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
    echo "Defaults !requiretty" >> /etc/sudoers
  fi

  groupadd -g 497 docker
  usermod -G docker ubuntu

  chown -R ubuntu:ubuntu /data

  ln -nfs /home /Users

  mkdir -p /var/run/sshd
}

function user_bootstrap {
  set -exfu

  ssh -o StrictHostKeyChecking=no github.com true 2>/dev/null || true

  cd

  if [[ -f .bash_profile ]]; then
    source .bash_profile
  fi

  if [[ ! -d .git ]]; then
    git clone https://github.com/imma/ubuntu
    mv ubuntu/.git .
    rm -rf ubuntu

    git reset --hard
  fi

  cp .gitconfig.template-https .gitconfig

  if [[ ! -f .bashrc.cache ]]; then
    script/setup
    make cache
  fi

  source .bash_profile
  block sync
  for a in {1..5}; do git clean -ffd || true; done
  source .bash_profile
  pushd work/shell
  if ! block bootstrap; then
    find /tmp /data
    return 1
  fi
  popd

  mkdir -p .ssh
  if ssh -o Include=meh 2>&1 | grep -q 'Bad'; then
    cat .ssh/config.template
  else
    perl -pe 's{^#Include}{Include}' .ssh/config.template
  fi > .ssh/config
  chmod 600 .ssh/config

  mkdir -p .gnupg
  chmod 0700 .gnupg
  touch .gnupg/gpg.conf
  chmod 0600 .gnupg/gpg.conf

  set +x
  make cache
  source .bash_profile
  set -x

  install -d -m 0700 /home/ubuntu/.ssh
  if [[ -f /data/authorized_keys ]]; then
    install -m 0600 /data/authorized_keys /home/ubuntu/.ssh/authorized_keys
  else
    curl -s https://github.com/defn.keys
  fi > /home/ubuntu/.ssh/authorized_keys
}

function main {
  set -x

  if [[ "$#" -gt 0 ]]; then
    exec "$@"
    return 1
  fi

  case "$(id -u -n)" in
    root)
      root_bootstrap
      sudo -H -u ubuntu env BUILD=1 "$0"
      return 0
      ;;
    ubuntu)
      user_bootstrap
      ;;
  esac

  if [[ -z "${BUILD:-}" ]]; then
    exec /usr/sbin/sshd -D -o UseDNS=no -o UsePAM=yes -o PasswordAuthentication=no
  fi
}

main "$@"
